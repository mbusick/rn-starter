{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/matthewbusick/Projects/ModernReact/rn-starter/src/screens/SquareScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ColorCounter from \"../components/ColorCounter\";\nvar COLOR_INCREMENT = 15;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'change_red':\n      return state.red + action.payload > 255 || state.red + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        red: state.red + action.payload\n      });\n\n    case 'change_green':\n      return state.green + action.payload > 255 || state.green + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        green: state.green + action.payload\n      });\n\n    case 'change_blue':\n      return state.blue + action.payload > 255 || state.blue + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        blue: state.blue + action.payload\n      });\n\n    default:\n  }\n};\n\nvar SquareScreen = function SquareScreen() {\n  var _useReducer = useReducer(reducer, {\n    red: 0,\n    green: 0,\n    blue: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var red = state.red,\n      green = state.green,\n      blue = state.blue;\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: 'change_red',\n        payload: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: 'change_red',\n        payload: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: 'change_blue',\n        payload: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: 'change_blue',\n        payload: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), React.createElement(ColorCounter, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: 'change_green',\n        payload: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: 'change_green',\n        payload: -1 * COLOR_INCREMENT\n      });\n    },\n    color: \"Green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 150,\n      width: 150,\n      backgroundColor: \"rgb(\" + red + \",\" + green + \",\" + blue + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({});\nexport default SquareScreen;","map":{"version":3,"sources":["/Users/matthewbusick/Projects/ModernReact/rn-starter/src/screens/SquareScreen.js"],"names":["React","useReducer","ColorCounter","COLOR_INCREMENT","reducer","state","action","type","red","payload","green","blue","SquareScreen","dispatch","height","width","backgroundColor","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport ColorCounter from '../components/ColorCounter';\n\nconst COLOR_INCREMENT = 15;\n\nconst reducer = (state, action) => {\n     // state === { red: number, gree: number, blue: number }\n     // action === { type: 'change_red' || 'change_green' || 'change_blue', amount: 15 || -15 }\n     switch (action.type) {\n        case 'change_red':\n            return state.red + action.payload > 255 || state.red + action.payload < 0\n                ? state\n                : { ...state, red: state.red + action.payload };\n        case 'change_green':\n            return state.green + action.payload > 255 || state.green + action.payload < 0\n                ? state\n                : { ...state, green: state.green + action.payload };\n        case 'change_blue':\n            return state.blue + action.payload > 255 || state.blue + action.payload < 0\n                ? state\n                : { ...state, blue: state.blue + action.payload };\n        default:\n     }\n};\n\nconst SquareScreen = () => {\n    const [state, dispatch] = useReducer(reducer, { red: 0, green: 0, blue: 0 });\n    const { red, green, blue } = state;\n\n    return (\n        <View>\n            <ColorCounter \n                onIncrease={() => \n                    dispatch({ type: 'change_red', payload: COLOR_INCREMENT })\n                } \n                onDecrease={() => \n                    dispatch({ type: 'change_red', payload: -1 * COLOR_INCREMENT })\n                } \n                color=\"Red\" \n            />\n            <ColorCounter \n                onIncrease={() => \n                    dispatch({ type: 'change_blue', payload: COLOR_INCREMENT })\n                } \n                onDecrease={() => \n                    dispatch({ type: 'change_blue', payload: -1 * COLOR_INCREMENT })\n                } \n                color=\"Blue\" \n            />\n            <ColorCounter  \n                onIncrease={() => \n                    dispatch({ type: 'change_green', payload: COLOR_INCREMENT })\n                } \n                onDecrease={() => \n                    dispatch({ type: 'change_green', payload: -1 * COLOR_INCREMENT })\n                } \n                color=\"Green\" \n            />\n            <View \n                style={{ \n                    height: 150, \n                    width: 150, \n                    backgroundColor: `rgb(${red},${green},${blue})` \n                }} \n            />\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({});\n\nexport default SquareScreen;\n"]},"metadata":{},"sourceType":"module"}