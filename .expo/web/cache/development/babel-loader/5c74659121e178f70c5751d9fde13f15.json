{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/matthewbusick/Projects/ModernReact/rn-starter/src/screens/ColorScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar ColorScreen = function ColorScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  console.log(colors);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Add a Color\",\n    onPress: function onPress() {\n      setColors([].concat(_toConsumableArray(colors), [randomRgb()]));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    data: colors,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          height: 100,\n          width: 100,\n          backgroundColor: item\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar randomRgb = function randomRgb() {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";\n};\n\nvar styles = StyleSheet.create({});\nexport default ColorScreen;","map":{"version":3,"sources":["/Users/matthewbusick/Projects/ModernReact/rn-starter/src/screens/ColorScreen.js"],"names":["React","useState","ColorScreen","colors","setColors","console","log","randomRgb","item","height","width","backgroundColor","red","Math","floor","random","green","blue","styles","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACMD,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,MACfE,MADe;AAAA,MACPC,SADO;;AAEtBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,aAAd;AAA4B,IAAA,OAAO,EAAE,mBAAM;AACvCC,MAAAA,SAAS,8BAAKD,MAAL,IAAaI,SAAS,EAAtB,GAAT;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII,oBAAC,QAAD;AACI,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUA,IAAV;AAAA,KADlB;AAEI,IAAA,IAAI,EAAEL,MAFV;AAGI,IAAA,UAAU,EAAE,0BAAc;AAAA,UAAXK,IAAW,QAAXA,IAAW;AACtB,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAE,GAAtB;AAA2BC,UAAAA,eAAe,EAAEH;AAA5C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAgBH,CApBD;;AAsBA,IAAMD,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,MAAMK,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ;AACA,MAAMC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAd;AACA,MAAME,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AAEA,kBAAcH,GAAd,UAAsBI,KAAtB,UAAgCC,IAAhC;AACH,CAND;;AAQA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAEA,eAAelB,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet, Button, FlatList } from 'react-native';\n\nconst ColorScreen = () => {\n    const [colors, setColors] = useState([]);\n    console.log(colors);\n\n    return (\n        <View>\n            <Button title=\"Add a Color\" onPress={() => {\n                setColors([...colors, randomRgb()]);\n            }}/>\n            <FlatList\n                keyExtractor={(item) => item}\n                data={colors}\n                renderItem={({ item }) => {\n                    return (\n                        <View style={{ height: 100, width: 100, backgroundColor: item }} />\n                    );\n                }}\n            />\n        </View>\n    );\n};\n\nconst randomRgb = () => {\n    const red = Math.floor(Math.random() * 256);\n    const green = Math.floor(Math.random() * 256);\n    const blue = Math.floor(Math.random() * 256);\n\n    return `rgb(${red}, ${green}, ${blue})`;\n};\n\nconst styles = StyleSheet.create({});\n\nexport default ColorScreen;"]},"metadata":{},"sourceType":"module"}